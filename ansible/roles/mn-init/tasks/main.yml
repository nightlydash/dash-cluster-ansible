---

- name: wait for wallet to sync with blockchain
  command: dash-cli mnsync status
  register: mnsync_status
  retries: 100
  delay: 60
  until: mnsync_status.stdout|from_json|json_query("IsSynced") == true

- name: get list of ProTx transactions from the wallet
  command: dash-cli protx list wallet true
  register: get_protx_list_result

- set_fact:
    registered_masternode_names: []

- name: get names of registered masternodes
  set_fact:
      registered_masternode_names: "{{ registered_masternode_names + [ item ] }}"
  when: get_protx_list_result.stdout|from_json|json_query("[?state.ownerAddress=='" + masternodes[item].owner.address + "']")
  with_items: '{{ groups["masternodes"] }}'

- name: registered masternodes list
  debug:
    var: registered_masternode_names

- name: determine new masternodes
  set_fact:
    new_masternode_names: "{{ groups['masternodes'] | difference(registered_masternode_names)}}"

- name: new masternodes list
  debug:
    var: new_masternode_names

- set_fact:
    banned_masternode_names: []

- name: get names of banned masternodes
  set_fact:
      banned_masternode_names: "{{ banned_masternode_names + [ item ] }}"
  when: get_protx_list_result.stdout|from_json|json_query("[?state.PoSeBanHeight > `0`]")
  with_items: '{{ registered_masternode_names }}'

- name: banned masternodes list
  debug:
    var: banned_masternode_names

- name: fund collaterals for not initialized masternodes
  include_role:
    name: mn-fund-collateral
  vars:
    masternode_names: "{{ new_masternode_names }}"
  when: new_masternode_names|length > 0

- name: create pro tx for not initialized masternodes
  include_role:
    name: mn-createprotx
  vars:
    masternode_names: "{{ new_masternode_names }}"
  when: new_masternode_names|length > 0

- name: unban banned masternodes
  include_role:
    name: mn-unban
  vars:
    masternode_names: "{{ banned_masternode_names }}"
  when: banned_masternode_names|length > 0
