---

- name: create elastic services dir
  file:
    path: '{{ elastic_path }}'
    state: directory
    recurse: true

- name: copy files
  template:
    src: '{{ item }}.j2'
    dest: '{{ elastic_path }}/{{ item }}'
  loop:
    - docker-compose.yml
    - elasticsearch.yml
    - kibana.yml

- name: start elastic services
  docker_compose:
    project_src: '{{ elastic_path }}'
    state: present
    pull: yes

- name: Wait for Elastic Stack to be available
  uri:
    url: http://localhost:9200
    user: "{{ elastic_username }}"
    password: "{{ elastic_password }}"
  register: response
  until: response.status == 200
  retries: 10
  delay: 10

- name: Configure ILM policy
  uri:
    url: "http://localhost:9200/_ilm/policy/masternode-logs"
    method: PUT
    status_code: 200
    user: "{{ elastic_username }}"
    password: "{{ elastic_password }}"
    body_format: json
    body: "{{ lookup('file', 'files/ilm_policy.json') }}"

- name: Set up abci index template
  uri:
    url: "http://localhost:9200/_index_template/logs-drive.abci"
    method: PUT
    status_code: 200
    user: "{{ elastic_username }}"
    password: "{{ elastic_password }}"
    body_format: json
    body: "{{ lookup('file', 'files/index-templates/logs-drive.abci.json') }}"

- name: Set up tenderdash index template
  uri:
    url: "http://localhost:9200/_index_template/logs-drive.tenderdash"
    method: PUT
    status_code: 200
    user: "{{ elastic_username }}"
    password: "{{ elastic_password }}"
    body_format: json
    body: "{{ lookup('file', 'files/index-templates/logs-drive.tenderdash.json') }}"

- name: Set up Kibana UI
  uri:
    url: "http://localhost:5601/api/saved_objects/_bulk_create"
    method: POST
    status_code: 200
    user: "{{ elastic_username }}"
    password: "{{ elastic_password }}"
    body_format: json
    force_basic_auth: true
    headers:
      kbn-xsrf: true
    body: "{{ lookup('file', 'files/infrastructure-ui-source.json') }}"
